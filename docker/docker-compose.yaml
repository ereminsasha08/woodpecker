version: '3.4'
services:
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    ports:
      - "9092:9090"
    volumes:
      - ../temp/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - woodpecker_network
  grafana:
    image: grafana/grafana:10.0.10-ubuntu
    ports:
      - "3000:3000"
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_INSTALL_PLUGINS=4701-jvm-micrometer
    networks:
      - woodpecker_network
    depends_on: [ prometheus ]
  zipkin:
    image: openzipkin/zipkin:2.25-amd64
    container_name: "zipkin"
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=elasticsearch:9300"
    networks:
      - woodpecker_network
  elasticsearch:
    image: elasticsearch:8.11.3
    container_name: "elasticsearch"
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.license.self_generated.type=trial
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ../temp/elasticsearch:/var/lib/elasticsearch/data
    ports:
      - "9300:9300"
      - "9200:9200"
    networks:
      - woodpecker_network
  kibana:
    image: kibana:8.11.3
    container_name: "kibana"
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9300"
    ports:
      - "5601:5601"
    networks:
      - woodpecker_network
  logstash:
    image: logstash:8.11.3
    container_name: "logstash"
    volumes:
      - ../temp/logstash/config:/usr/share/logstash/pipeline
    ports:
      - "5000:5000"
    networks:
      - woodpecker_network
    depends_on: [ elasticsearch ]
  rabbit-mq:
    image: rabbitmq:3.9.29-management
    container_name: "rabbit-mq"
    ports:
      - "5672:5672"
      - "8089:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    networks:
      - woodpecker_network
    volumes:
      - ../temp/rabbitmq:/var/lib/rabbitmq
    depends_on: [ redis ]
  db-woodpecker:
    image: postgres:13
    container_name: "db-woodpecker"
    ports:
      - "5432:5432"
    networks:
      - woodpecker_network
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ../temp/postgresql:/var/lib/postgresql
  redis:
    image: redis:7.2.3-alpine3.19
    container_name: "redis"
    ports:
      - "6379:6379"
    networks:
      - woodpecker_network
    volumes:
      - ../temp/redis:/opt/redis
  config-server:
    image: sashaeremin/config_server:0.0.1
    container_name: "config-server"
    ports:
      - "8071:8071"
    networks:
      - woodpecker_network
    environment:
      - LOGSTASH_URL=logstash
      - spring.cloud.config.server.git.password=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
      - spring.cloud.config.server.git.username=sashaeremin08051998@gmail.com
    depends_on: [ db-woodpecker ]
  eureka:
    image: sashaeremin/eureka:0.0.1
    container_name: "eureka"
    ports:
      - "8070:8070"
    networks:
      - woodpecker_network
    environment:
      - LOGSTASH_URL=logstash
      - spring.profiles.active=prod
      - spring.cloud.config.uri=http://config-server:8071
    depends_on: [ config-server ]
  gateway:
    image: sashaeremin/gateway:0.0.1
    container_name: "gateway"
    ports:
      - "8072:8072"
    networks:
      - woodpecker_network
    environment:
      - LOGSTASH_URL=logstash
      - spring.profiles.active=prod
      - spring.cloud.config.uri=http://config-server:8071
    depends_on: [ config-server, eureka ]
  keycloak:
    image: jboss/keycloak:16.1.1
    restart: always
    environment:
      DB_VENDOR: postgres
      DB_ADDR: db-woodpecker
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_USER: user
      DB_PASSWORD: password
      KEYCLOAK_USER: user
      KEYCLOAK_PASSWORD: password
    ports:
      - "8100:8080"
    networks:
      - woodpecker_network
#  store:
#    image: sashaeremin/woodpecker/store:0.0.1
#    container_name: "store"
#    ports:
#      - "9091:9091"
#    networks:
#      - woodpecker_network
#    environment:
#      - LOGSTASH_URL=logstash
#      - spring.profiles.active=prod
#      - spring.cloud.config.uri=http://config-server:8071
#    depends_on: [ eureka, config-server, rabbit-mq ]
#  woodpecker-backend:
##    build: .
#    image: sashaeremin/woodpecker/backend:0.0.1
#    container_name: "woodpecker-backend"
#    ports:
#      - "9090:9090"
#    networks:
#      - woodpecker_network
#    environment:
#      - spring.profiles.active=prod
#      - spring.cloud.config.uri=http://config-server:8071
#    depends_on: [ eureka, config-server, keycloak, rabbit-mq]
networks:
  woodpecker_network:
    driver: bridge








