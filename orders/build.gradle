plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}


java {
    sourceCompatibility = '21'
}

bootJar {
    archivesBaseName = 'orders'
    version = ''
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

//    implementation 'org.springframework.cloud:spring-cloud-stream'
//    implementation 'org.springframework.boot:spring-boot-starter-amqp'
//    implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'

    implementation 'io.github.resilience4j:resilience4j-spring-boot3'
    implementation 'io.github.resilience4j:resilience4j-all:2.1.0'

    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

//    implementation 'org.flywaydb:flyway-core'
//    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

    implementation 'org.jsoup:jsoup:1.16.2'
//    implementation 'org.webjars:jquery:3.7.1'
//    implementation 'org.webjars:bootstrap:5.3.2'
//    implementation 'org.webjars:datatables:1.13.5'
//    implementation 'org.webjars:datetimepicker:2.5.20'
//    implementation 'org.webjars.bower:noty:3.1.4'
//    implementation 'javax.persistence:javax.persistence-api:2.2'
//    implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:0.4.260'
    imageName = 'sashaeremin/woodpecker/orders:0.0.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootRun'){

}

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}